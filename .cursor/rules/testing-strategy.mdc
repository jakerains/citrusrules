---
description: Unified approach for unit, integration, and e2e tests.
globs: ["**/*.{ts,js,tsx,jsx,py,go,java}"]
alwaysApply: false
---
---
name: TestingStrategy
type: Auto Attached
description: Encourage consistent testing methodology across the project
glob: **/*.{ts,js,tsx,jsx,py,go,java}
priority: high
---

# Testing Strategy

Implement thorough testing at multiple levels.

## Test Pyramid

- **Unit tests** validate small pieces of logic in isolation.
- **Integration tests** cover interactions between modules.
- **End-to-end tests** ensure user flows work correctly.

## General Practices

- Write tests alongside new features.
- Use descriptive test names explaining the expected behavior.
- Keep tests deterministic and independent.

## Mocking and Fixtures

- Stub external services to keep tests fast.
- Use fixture data for repeatability.

## Example

```ts
import { describe, it, expect } from 'vitest';
import { sum } from './math';

describe('sum', () => {
  it('adds numbers', () => {
    expect(sum(1, 2)).toBe(3);
  });
});
```

Consistent testing leads to confident and maintainable code.
